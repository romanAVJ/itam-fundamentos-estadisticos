Nsim <- 1000
set.seed(SEED)
# params
lognorm_params <- list(meanlog = 0, sdlog = 2)
# sim
xdist <- rlnorm(Nsim, meanlog = lognorm_params[["meanlog"]], sdlog = lognorm_params[["sdlog"]])
# plots
generate_simulations(xdist, qdist = qlnorm, params = lognorm_params, dist_name = "lognormal(0, 2)")
generate_simulations <- function(x, qdist, params, dist_name, color = "steelblue"){
# sample 2 df
df <- tibble(x = x, sim = 1:length(x))
g1 <- df |>
ggplot(aes(sample = x)) +
geom_qq(distribution = qdist, dparams = params, color = color) +
geom_qq_line(distribution = qdist, dparams = params) +
ggtitle("Gráfica Cuantil Muestral", subtitle = str_glue("Distribución {dist_name}")) +
xlab("Teórico") + ylab("Observado") +
theme_bw()
g2 <- df |>
ggplot(aes(x)) +
geom_histogram(bins = 30, fill = color) +
ggtitle("Histograma", subtitle = str_glue("Distribución {dist_name}")) +
xlab("x") +
theme_bw()
# g3
print(g1)
print(g2)
}
# Simulations
Nsim <- 1000
set.seed(SEED)
# params
lognorm_params <- list(meanlog = 0, sdlog = 2)
# sim
xdist <- rlnorm(Nsim, meanlog = lognorm_params[["meanlog"]], sdlog = lognorm_params[["sdlog"]])
# plots
generate_simulations(xdist, qdist = qlnorm, params = lognorm_params, dist_name = "lognormal(0, 2)")
generate_simulations <- function(x, qdist, params, dist_name, color = "steelblue"){
# sample 2 df
df <- tibble(x = x, sim = 1:length(x))
g1 <- df |>
ggplot(aes(sample = x)) +
geom_qq(distribution = qdist, dparams = params, color = color) +
geom_qq_line(distribution = qdist, dparams = params) +
ggtitle("Gráfica Cuantil Muestral", subtitle = str_glue("Distribución {dist_name}")) +
xlab("Teórico") + ylab("Observado") +
theme_bw()
g2 <- df |>
ggplot(aes(x)) +
geom_histogram(bins = 30, fill = color) +
ggtitle("Histograma", subtitle = str_glue("Distribución {dist_name}")) +
xlab("x") +
theme_bw()
g3 <-  df |>
ggplot(aes(sample = x)) +
geom_qq(color = color) +
geom_qq_line() +
ggtitle("Gráfica Cuantil Muestral", subtitle = str_glue("Distribución normal")) +
xlab("Teórico") + ylab("Observado") +
theme_bw()
print(g1)
print(g2)
print(g3)
}
# Simulations
Nsim <- 1000
set.seed(SEED)
# params
lognorm_params <- list(meanlog = 0, sdlog = 2)
# sim
xdist <- rlnorm(Nsim, meanlog = lognorm_params[["meanlog"]], sdlog = lognorm_params[["sdlog"]])
# plots
generate_simulations(xdist, qdist = qlnorm, params = lognorm_params, dist_name = "lognormal(0, 2)")
set.seed(3)
# params
lognorm_params <- list(meanlog = 0, sdlog = 2)
# sim
xdist <- rlnorm(Nsim, meanlog = lognorm_params[["meanlog"]], sdlog = lognorm_params[["sdlog"]])
# plots
generate_simulations(xdist, qdist = qlnorm, params = lognorm_params, dist_name = "lognormal(0, 2)")
set.seed(SEED)
# params
lognorm_params <- list(meanlog = 0, sdlog = 2)
# sim
xdist <- rlnorm(Nsim, meanlog = lognorm_params[["meanlog"]], sdlog = lognorm_params[["sdlog"]])
# plots
generate_simulations(xdist, qdist = qlnorm, params = lognorm_params, dist_name = "lognormal(0, 2)")
generate_simulations <- function(x, qdist, params, dist_name, color = "steelblue"){
# sample 2 df
df <- tibble(x = x, sim = 1:length(x))
g1 <- df |>
ggplot(aes(sample = x)) +
geom_qq(distribution = qdist, dparams = params, color = color) +
geom_qq_line(distribution = qdist, dparams = params) +
ggtitle("Gráfica Cuantil Muestral", subtitle = str_glue("Distribución {dist_name}")) +
xlab("Teórico") + ylab("Observado") +
theme_bw()
g2 <- df |>
ggplot(aes(x)) +
geom_histogram(bins = 100, fill = color) +
ggtitle("Histograma", subtitle = str_glue("Distribución {dist_name}")) +
xlab("x") +
theme_bw()
g3 <-  df |>
ggplot(aes(sample = x)) +
geom_qq(color = color) +
geom_qq_line() +
ggtitle("Gráfica Cuantil Muestral", subtitle = str_glue("Distribución normal")) +
xlab("Teórico") + ylab("Observado") +
theme_bw()
print(g1)
print(g2)
print(g3)
}
# Simulations
Nsim <- 1000
set.seed(SEED)
# params
lognorm_params <- list(meanlog = 0, sdlog = 2)
# sim
xdist <- rlnorm(Nsim, meanlog = lognorm_params[["meanlog"]], sdlog = lognorm_params[["sdlog"]])
# plots
generate_simulations(xdist, qdist = qlnorm, params = lognorm_params, dist_name = "lognormal(0, 2)")
generate_simulations <- function(x, qdist, params, dist_name, color = "steelblue"){
# sample 2 df
df <- tibble(x = x, sim = 1:length(x))
g1 <- df |>
ggplot(aes(sample = x)) +
geom_qq(distribution = qdist, dparams = params, color = color) +
geom_qq_line(distribution = qdist, dparams = params) +
ggtitle("Gráfica Cuantil Muestral", subtitle = str_glue("Distribución {dist_name}")) +
xlab("Teórico") + ylab("Observado") +
theme_bw()
g2 <- df |>
ggplot(aes(x)) +
geom_histogram(bins = 100, fill = color, color = "black") +
ggtitle("Histograma", subtitle = str_glue("Distribución {dist_name}")) +
xlab("x") +
theme_bw()
g3 <-  df |>
ggplot(aes(sample = x)) +
geom_qq(color = color) +
geom_qq_line() +
ggtitle("Gráfica Cuantil Muestral", subtitle = str_glue("Distribución normal")) +
xlab("Teórico") + ylab("Observado") +
theme_bw()
print(g1)
print(g2)
print(g3)
}
# Simulations
Nsim <- 1000
set.seed(SEED)
# params
lognorm_params <- list(meanlog = 0, sdlog = 2)
# sim
xdist <- rlnorm(Nsim, meanlog = lognorm_params[["meanlog"]], sdlog = lognorm_params[["sdlog"]])
# plots
generate_simulations(xdist, qdist = qlnorm, params = lognorm_params, dist_name = "lognormal(0, 2)")
?rgamma
set.seed(SEED)
# params
gamma_params <- list(shape = 2, scale = 2)
# sim
xdist <- rlnorm(Nsim, meanlog = gamma_params[["shape"]], sdlog = gamma_params[["scale"]])
# plots
generate_simulations(xdist, qdist = qgamma, params = gamma_params, dist_name = "gamma(2, 2)")
set.seed(SEED)
# params
gamma_params <- list(shape = 2, scale = 2)
# sim
xdist <- rlnorm(Nsim, meanlog = gamma_params[["shape"]], sdlog = gamma_params[["scale"]])
# plots
generate_simulations(xdist, qdist = qgamma, params = gamma_params, dist_name = "gamma(2, 2)", colors = "darkred")
generate_simulations <- function(x, qdist, params, dist_name, color = "steelblue"){
# sample 2 df
df <- tibble(x = x, sim = 1:length(x))
g1 <- df |>
ggplot(aes(sample = x)) +
geom_qq(distribution = qdist, dparams = params, color = color) +
geom_qq_line(distribution = qdist, dparams = params) +
ggtitle("Gráfica Cuantil Muestral", subtitle = str_glue("Distribución {dist_name}")) +
xlab("Teórico") + ylab("Observado") +
theme_bw()
g2 <- df |>
ggplot(aes(x)) +
geom_histogram(bins = 100, fill = color, color = "black") +
ggtitle("Histograma", subtitle = str_glue("Distribución {dist_name}")) +
xlab("x") +
theme_bw()
g3 <-  df |>
ggplot(aes(sample = x)) +
geom_qq(color = color) +
geom_qq_line() +
ggtitle("Gráfica Cuantil Muestral", subtitle = str_glue("Distribución normal")) +
xlab("Teórico") + ylab("Observado") +
theme_bw()
print(g1)
print(g2)
print(g3)
}
# Simulations
Nsim <- 1000
set.seed(SEED)
# params
gamma_params <- list(shape = 2, scale = 2)
# sim
xdist <- rlnorm(Nsim, meanlog = gamma_params[["shape"]], sdlog = gamma_params[["scale"]])
# plots
generate_simulations(xdist, qdist = qgamma, params = gamma_params, dist_name = "gamma(2, 2)", color = "darkred")
set.seed(2)
# params
gamma_params <- list(shape = 2, scale = 2)
# sim
xdist <- rlnorm(Nsim, meanlog = gamma_params[["shape"]], sdlog = gamma_params[["scale"]])
# plots
generate_simulations(xdist, qdist = qgamma, params = gamma_params, dist_name = "gamma(2, 2)", color = "darkred")
set.seed(SEED)
# params
gamma_params <- list(shape = 2, scale = 2)
# sim
xdist <- rlnorm(Nsim, meanlog = gamma_params[["shape"]], sdlog = gamma_params[["scale"]])
# plots
generate_simulations(xdist, qdist = qgamma, params = gamma_params, dist_name = "gamma(2, 2)", color = "darkred")
set.seed(SEED)
# params
gamma_params <- list(shape = 2, scale = 2)
# sim
xdist <- rgamma(Nsim, meanlog = gamma_params[["shape"]], sdlog = gamma_params[["scale"]])
set.seed(SEED)
# params
gamma_params <- list(shape = 2, scale = 2)
# sim
xdist <- rgamma(Nsim, shape = gamma_params[["shape"]], scale = gamma_params[["scale"]])
# plots
generate_simulations(xdist, qdist = qgamma, params = gamma_params, dist_name = "gamma(2, 2)", color = "darkred")
generate_simulations <- function(x, qdist, params, dist_name, color = "steelblue"){
# sample 2 df
df <- tibble(x = x, sim = 1:length(x))
g1 <- df |>
ggplot(aes(sample = x)) +
geom_qq(distribution = qdist, dparams = params, color = color) +
geom_qq_line(distribution = qdist, dparams = params) +
ggtitle("Gráfica Cuantil Muestral", subtitle = str_glue("Distribución {dist_name}")) +
xlab("Teórico") + ylab("Observado") +
theme_bw()
g2 <- df |>
ggplot(aes(x)) +
geom_histogram(bins = 30, fill = color, color = "black") +
ggtitle("Histograma", subtitle = str_glue("Distribución {dist_name}")) +
xlab("x") +
theme_bw()
g3 <-  df |>
ggplot(aes(sample = x)) +
geom_qq(color = color) +
geom_qq_line() +
ggtitle("Gráfica Cuantil Muestral", subtitle = str_glue("Distribución normal")) +
xlab("Teórico") + ylab("Observado") +
theme_bw()
print(g1)
print(g2)
print(g3)
}
# Simulations
Nsim <- 1000
set.seed(SEED)
# params
gamma_params <- list(shape = 2, scale = 2)
# sim
xdist <- rgamma(Nsim, shape = gamma_params[["shape"]], scale = gamma_params[["scale"]])
# plots
generate_simulations(xdist, qdist = qgamma, params = gamma_params, dist_name = "gamma(2, 2)", color = "darkred")
rt?
?rt
set.seed(SEED)
# params
t_params <- list(df = 2)
# sim
xdist <- rt(Nsim, df = t_params[["df"]])
# plots
generate_simulations(xdist, qdist = qt, params = t_params, dist_name = "t with 1 df", color = "darkgreen")
set.seed(SEED)
# params
t_params <- list(df = 1)
# sim
xdist <- rt(Nsim, df = t_params[["df"]])
# plots
generate_simulations(xdist, qdist = qt, params = t_params, dist_name = "t with 1 df", color = "darkgreen")
set.seed(SEED)
# params
t_params <- list(df = 10)
# sim
xdist <- rt(Nsim, df = t_params[["df"]])
# plots
generate_simulations(xdist, qdist = qt, params = t_params, dist_name = "t with 10 df", color = "forestgreen")
df_experiment <- tibble(treatment = c(94, 197, 16, 38, 99, 141, 23),
control = c(52, 104, 146, 10, 51, 30, 40, 27, 46))
# data
xtreatment <-  c(94, 197, 16, 38, 99, 141, 23)
xcontrol <-  c(52, 104, 146, 10, 51, 30, 40, 27, 46)
# diff mean
mean_diff <- mean(xtreatment) - mean(xcontrol)
print(str_glue("Diferencia de muestras {mean_diff}"))
# data
xtreatment <-  c(94, 197, 16, 38, 99, 141, 23)
xcontrol <-  c(52, 104, 146, 10, 51, 30, 40, 27, 46)
# diff mean
mean_diff <- mean(xtreatment) - mean(xcontrol)
print(str_glue("Diferencia de muestras {round(mean_diff, 4)}"))
# hyp test
ttest <- t.test(xtreatment ~ xcontrol)
# hyp test
ttest <- t.test(xtreatment, xcontrol)
ttest
?t.test
# hyp test
ttest <- t.test(xtreatment, xcontrol, alternative = "greater")
ttest$alternative
ttest$statistic
ttest$p.value
# data
xtreatment <-  c(94, 197, 16, 38, 99, 141, 23)
xcontrol <-  c(52, 104, 146, 10, 51, 30, 40, 27, 46)
# diff mean
mean_diff <- mean(xtreatment) - mean(xcontrol)
# hyp test
ttest <- t.test(xtreatment, xcontrol, alternative = "greater")
print(str_glue("Diferencia de muestras {round(mean_diff, 4)}"))
print(str_glue("Hay {ttest$p.value} de evidencia para pensar que tienen differente supervivencia"))
print(str_glue("Hay {round(ttest$p.value)} de evidencia para pensar que tienen differente supervivencia"))
print(str_glue("Hay {round(ttest$p.value, 4)} de evidencia para pensar que tienen differente supervivencia"))
?map_df
see_boot_2samples <- function(x, y, B=250){
mean_diff_boot <- c()
nx <- length(x)
ny <- length(y)
for(i in 1:B)
mean_diff_boot[i] <- mean(sample(x, nx, replace = TRUE)) - mean(sample(y, ny, replace = TRUE))
return(sd(mean_diff_boot))
}
see_boot_2samples(xtreatment, xcontrol, B=1000)
set.seed(SEED)
see_boot_2samples <- function(x, y, B=250){
mean_diff_boot <- c()
nx <- length(x)
ny <- length(y)
for(i in 1:B)
mean_diff_boot[i] <- mean(sample(x, nx, replace = TRUE)) - mean(sample(y, ny, replace = TRUE))
return(sd(mean_diff_boot))
}
see_boot_2samples(xtreatment, xcontrol, B=1000)
set.seed(SEED)
see_boot_2samples <- function(x, y, B=250){
mean_diff_boot <- c()
nx <- length(x)
ny <- length(y)
for(i in 1:B)
mean_diff_boot[i] <- mean(sample(x, nx, replace = TRUE)) - mean(sample(y, ny, replace = TRUE))
return(sd(mean_diff_boot))
}
see_2_samples <- see_boot_2samples(xtreatment, xcontrol, B=1000)
print(str_glue("El see del estimador es de {see_2_samples}"))
set.seed(SEED)
see_boot_2samples <- function(x, y, B=250){
mean_diff_boot <- c()
nx <- length(x)
ny <- length(y)
for(i in 1:B)
mean_diff_boot[i] <- mean(sample(x, nx, replace = TRUE)) - mean(sample(y, ny, replace = TRUE))
return(sd(mean_diff_boot))
}
see_2_samples <- see_boot_2samples(xtreatment, xcontrol, B=1000)
print(str_glue("El see del estimador es de {round(see_2_samples, 4)}"))
# data
xtreatment <-  c(94, 197, 16, 38, 99, 141, 23)
xcontrol <-  c(52, 104, 146, 10, 51, 30, 40, 27, 46)
# diff mean
mean_diff <- mean(xtreatment) - mean(xcontrol)
# hyp test
ttest <- t.test(xtreatment, xcontrol, alternative = "greater")
print(str_glue("Diferencia de muestras {round(mean_diff, 4)}"))
print(str_glue("Hay {round(ttest$p.value, 4)} de evidencia para pensar que tienen diferente supervivencia"))
set.seed(SEED)
boot_median <- function(x, y, B=250){
median_diff_boot <- c()
nx <- length(x)
ny <- length(y)
for(i in 1:B)
median_diff_boot[i] <- median(sample(x, nx, replace = TRUE)) - median(sample(y, ny, replace = TRUE))
return(median_diff_boot)
}
median_boot <- boot_median(xtreatment, xcontrol, B=1000)
tibble(x = median_boot) |>
ggplot(aes(x)) |>
geom_histogram(bins = 30, fill = "steelblue", color = "black")
tibble(x = median_boot) |>
ggplot(aes(x)) +
geom_histogram(bins = 30, fill = "steelblue", color = "black")
set.seed(SEED)
boot_median <- function(x, y, B=250){
median_diff_boot <- c()
nx <- length(x)
ny <- length(y)
for(i in 1:B)
median_diff_boot[i] <- median(sample(x, nx, replace = TRUE)) - median(sample(y, ny, replace = TRUE))
return(median_diff_boot)
}
median_boot <- boot_median(xtreatment, xcontrol, B=2000)
tibble(x = median_boot) |>
ggplot(aes(x)) +
geom_histogram(bins = 30, fill = "steelblue", color = "black")
print(str_glue("La media del estimador es de la mediana es {round(mean(median_boot), 4)}"))
print(str_glue("El see del estimador es de {round(sd(median_boot), 4)}"))
getwd()
getwd()
# enlace <- read_csv("enlace_15.csv")
enlace <- read_csv("../../data/enlace_15.csv")
df_enlace <- read_csv("../../data/enlace_15.csv")
df_enlace |> head()
boot_corr <- function(df, nsample, B){
n_df <- length(df)
b_index <- lapply(1:B, sample(1:n_df, size = nsample, replace = TRUE))
corr_boot <- c()
i <- 1
for(index in b_index){
corr_boot[i] <- corr(df[index, "esp_3"], df[index, "esp_6"])
}
return(corr_boot)
}
corr_spanish <- boot_corr(df_enlace, nsample = 100, B=250)
boot_corr <- function(df, nsample, B){
n_df <- length(df)
b_index <- lapply(1:B, function(x) sample(1:n_df, size = nsample, replace = TRUE))
corr_boot <- c()
i <- 1
for(index in b_index){
corr_boot[i] <- corr(df[index, "esp_3"], df[index, "esp_6"])
}
return(corr_boot)
}
corr_spanish <- boot_corr(df_enlace, nsample = 100, B=250)
boot_corr <- function(df, nsample, B){
n_df <- length(df)
b_index <- lapply(1:B, function(x) sample(1:n_df, size = nsample, replace = TRUE))
corr_boot <- c()
i <- 1
for(index in b_index){
corr_boot[i] <- cor(df[index, "esp_3"], df[index, "esp_6"])
}
return(corr_boot)
}
corr_spanish <- boot_corr(df_enlace, nsample = 100, B=250)
# get bootstrap
corr_spanish <- boot_corr(df_enlace, nsample = 100, B=250)
boot_corr <- function(df, nsample, B){
n_df <- length(df)
b_index <- lapply(1:B, function(x) sample(1:n_df, size = nsample, replace = TRUE))
corr_boot <- c()
i <- 1
for(index in b_index){
corr_boot[i] <- cor(df[index, "esp_3"], df[index, "esp_6"])
}
return(corr_boot)
}
# get bootstrap
corr_spanish <- boot_corr(df_enlace, nsample = 100, B=250)
# plot
tibble(x = corr_spanish) |>
ggplot(aes(x)) +
geom_histogram(bins = 30, fill = "steelblue", color = "black")
print(str_glue("La media del estimador es de la correlacion es {round(mean(corr_spanish), 4)}"))
print(str_glue("El see del estimador es de {round(sd(corr_spanish), 4)}"))
corr_spanish
boot_corr <- function(df, nsample, B){
n_df <- length(df)
b_index <- lapply(1:B, function(x) sample(1:n_df, size = nsample, replace = TRUE))
corr_boot <- c()
i <- 1
for(index in b_index){
corr_boot[i] <- cor(df[index, "esp_3"], df[index, "esp_6"])
i <- i + 1
}
return(corr_boot)
}
# get bootstrap
corr_spanish <- boot_corr(df_enlace, nsample = 100, B=250)
# plot
tibble(x = corr_spanish) |>
ggplot(aes(x)) +
geom_histogram(bins = 30, fill = "steelblue", color = "black")
print(str_glue("La media del estimador es de la correlacion es {round(mean(corr_spanish), 4)}"))
print(str_glue("El see del estimador es de {round(sd(corr_spanish), 4)}"))
boot_corr <- function(df, nsample, B){
n_df <- length(df)
b_index <- lapply(1:B, function(x) sample(1:n_df, size = nsample, replace = TRUE))
corr_boot <- c()
i <- 1
for(index in b_index){
corr_boot[i] <- cor(df[index, "esp_3"], df[index, "esp_6"])
i <- i + 1
}
return(corr_boot)
}
# get bootstrap
corr_spanish <- boot_corr(df_enlace, nsample = 100, B=250)
# plot
tibble(x = corr_spanish) |>
ggplot(aes(x)) +
geom_histogram(bins = 30, fill = "steelblue", color = "black") +
geom_vline(xintercept = mean(corr_spanish), color = "darkred")
print(str_glue("La media del estimador es de la correlacion es {round(mean(corr_spanish), 4)}"))
print(str_glue("El see del estimador es de {round(sd(corr_spanish), 4)}"))
